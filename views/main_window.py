from PySide6.QtWidgets import QMainWindow, QTabWidget
from models.database import Database
from views.tabs.franchise import FranchiseTab
from views.tabs.location import LocationTab
from views.tabs.device import DeviceTab


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("üè¢ FCAS - Franchise Control and Administration System")
        self.setGeometry(100, 100, 1200, 900)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        self.db = Database()
        if not self.db.connect("fcas", "postgres", "postgres", "localhost"):
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        self.tabs = QTabWidget()
        self.tabs.setDocumentMode(True)  # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å –≤–∫–ª–∞–¥–æ–∫
        self.setCentralWidget(self.tabs)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —Ñ—Ä–∞–Ω—à–∏–∑
        self.franchise_tab = FranchiseTab(self.db)
        self.tabs.addTab(self.franchise_tab, "–§—Ä–∞–Ω—à–∏–∑—ã")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –ª–æ–∫–∞—Ü–∏–π
        self.location_tab = LocationTab(self.db)
        self.tabs.addTab(self.location_tab, "–õ–æ–∫–∞—Ü–∏–∏")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        self.device_tab = DeviceTab(self.db)
        self.tabs.addTab(self.device_tab, "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å –±–∞—Ä–∞
        self.statusBar().showMessage("–ì–æ—Ç–æ–≤–æ", 3000)

        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        self.franchise_tab.load_data()
        self.location_tab.load_data()
        self.device_tab.load_data()

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        self.franchise_tab.controller.data_changed.connect(self.refresh_all_tabs)
        self.location_tab.controller.data_changed.connect(self.refresh_all_tabs)
        self.device_tab.controller.data_changed.connect(self.refresh_all_tabs)

    def closeEvent(self, event):
        self.db.close()
        super().closeEvent(event)

    def refresh_all_tabs(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–∫–∞—Ö"""
        self.franchise_tab.load_data()
        self.location_tab.load_data()
        self.device_tab.load_data()

